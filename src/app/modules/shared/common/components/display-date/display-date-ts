import { Component, OnInit, Input, SimpleChanges } from '@angular/core';
@Component({
    selector: 'display-date',
    template: `
        <ng-template #other_content></ng-template>

        <span [ngSwitch]="format" *ngIf="!!model;else other_content">
            <span class="" *ngSwitchCase="'D'">
                {{ model | date: 'dd-MMM-yyyy' }}
            </span>

            <span class="" *ngSwitchCase="'DT'">
                {{ model | date: 'dd-MMM-yyyy HH:mm' }}
            </span>

            <span class="" *ngSwitchCase="'MY'">
                {{ model | date: 'MMM-yyyy' }}
            </span>

            <span class="" *ngSwitchCase="'T'">
                {{ model | date: 'HH:mm' }}
            </span>

            <span class="" *ngSwitchCase="'TS'">
                {{ model | date: 'HH:mm:ss' }}
            </span>

            <span class="" *ngSwitchCase="'C'">
                {{ model | date: formatValue }}
            </span>

            <span class="" *ngSwitchCase="'DTS'">
                {{ model | date: 'dd-MMM-yyyy HH:mm:ss' }}
            </span>

            <span class="" *ngSwitchCase="'DM'">
                {{ model | date: 'dd-MMM' }}
            </span>
        </span>  
    `,
    styles: []
})
export class DisplayDateComponent implements OnInit {


    @Input() cell: any;
    @Input() value: Date | string | null;
    @Input() format: 'D' | 'DT' | 'MY' | 'T' | 'TS' | 'C' | 'DM' = 'D';
    @Input() formatValue: string;

    public model: any;

    constructor() {
        this.value = null;
        this.formatValue = '';
    }

    ngOnInit(): void {
        this.do();
    }

    private do() {
        if (!!this.cell) {
            this.model = !!this.cell.value ? this.cell.value : null;
        } else {
            this.model = this.value;
        }
    }

    public ngOnChanges(changes: SimpleChanges): void {
        const changeValue = changes.value;
        if (!!changeValue && !changeValue.firstChange) 
            this.do();
    }
}